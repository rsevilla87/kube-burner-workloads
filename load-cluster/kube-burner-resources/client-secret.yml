kind: Deployment
apiVersion: apps/v1
metadata:
  name: client-secret-{{.Replica}}
spec:
  template:
    metadata:
      labels:
        app: client-secret-{{.Replica}}
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      containers:
      - name: perfapp
        image: {{.image}}
        readinessProbe:
          httpGet:
            path: {{.readinessProbe}}
            port: 8080
          periodSeconds: {{.readinessPeriod}}
          failureThreshold: 3
          timeoutSeconds: 30
          initialDelaySeconds: 10
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: client-{{.Replica}}
              key: username
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: client-{{.Replica}}
              key: password
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: client-{{.Replica}}
              key: database
        - name: POSTGRESQL_HOSTNAME
          value: postgres-secret-{{.Replica}}
        - name: POSTGRESQL_PORT
          value: '5432'
        - name: POSTGRESQL_RETRY_INTERVAL
          value: '5'
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
  replicas: {{.podReplicas}}
  selector:
    matchLabels:
      app: client-secret-{{.Replica}}
  triggers:
  - type: ConfigChange
  strategy:
    type: RollingUpdate
